service: timeline-service
frameworkVersion: '2'

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  region: ap-southeast-1
  environment:
    TIMELINE_TABLE_NAME: ${self:custom.TimelineTable.name}
    LIKE_TABLE_NAME: ${self:custom.LikeTable.name}
    SET_TIME_CREATE_TIMELINE: 360000
  iamRoleStatements:
    - ${file(iam/TimelineTableIAM.yml):TimelineTableIAM}

resources:
  Resources:
    TimelineTable: ${file(resources/TimelineTable.yml):TimelineTable}

functions:
  createPostTimeline:
    handler: src/handlers/createPostTimeline.handler
    events:
      - http:
          method: POST
          path: /timeline
          authorizer: ${self:custom.authorizer}
  getPostDetailTimeline:
    handler: src/handlers/getPostDetail.handler
    events:
      - http:
          method: GET
          path: /timeline/{id}
          authorizer: ${self:custom.authorizer}
  getAllTimeline:
    handler: src/handlers/getAllPostTimeline.handler
    events:
      - http:
          method: GET
          path: /timeline
          authorizer: ${self:custom.authorizer}
  deletePostTimeline:
    handler: src/handlers/deletePostTimeline.handler
    events:
      - http:
          method: DELETE
          path: /timeline/{id}
          authorizer: ${self:custom.authorizer}

custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-authorize
  TimelineTable:
    name: !Ref TimelineTable
    arn: !GetAtt TimelineTable.Arn
  LikeTable:
    name: LikeTable-dev
  bundle:
    linting: false